worker_rlimit_nofile 65535;
worker_processes  32;
pcre_jit on;
error_log  /var/log/nginx/error.log;

events {
  use epoll;
  #worker_connections 10000;
  worker_connections 1024;
  accept_mutex on; # set to on if you have more than 1 worker_processes
  #accept_mutex_delay 500ms;
}


http {

#  default_type           text/html;
  include /etc/nginx/mime.types;
  sendfile               on; # use the kernel sendfile
  tcp_nopush             on; # prepend http headers before sendfile(), should be on
  tcp_nodelay            on; # on for keepalive?
#  send_timeout           10; # クライアントへの応答の送信タイムアウト
  #keepalive_timeout       0; # 0 to disable keepalive. ケースバイケースなので考えて切り替える
  keepalive_timeout       120; # 0 to disable keepalive. ケースバイケースなので考えて切り替える
  # keepalive_timeout      60;
  keepalive_requests   6000;

#  client_header_timeout        5;
#  client_body_timeout          30;
#  client_body_temp_path        /dev/shm/client_temp 1 1;
#  client_max_body_size         10m;
#  client_body_buffer_size      32k;
#  client_header_buffer_size    2k;
# reset_timedout_connection on; # 非アクティブクライアントの connection をクローズする
#  large_client_header_buffers  4 8k;
#  proxy_connect_timeout 5;
#  proxy_send_timeout    5;
#  proxy_read_timeout    5;
#  proxy_buffering off;
#  proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
#  proxy_temp_path /dev/shm/proxy_temp 1 1;
#  proxy_cache_path /dev/shm/cache levels=1:2 keys_zone=cache-space:20m max_size=300m inactive=10m;

#  gzip  on; # gzip 圧縮. cpu を食うトレードオフ. クライアントによってはおかしくなることがあったと思う
#  gzip_vary on;
#  gzip_min_length 500;
#  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
#  gzip_types text/plain text/xml text/css
#     text/comma-separated-values
#     text/javascript application/x-javascript
#     application/atom+xml image/x-icon;

  log_format  ltsv  'host:$remote_addr\t'
                    'vhost:$http_host\t'
                    'port:$server_port\t'
                    'time:$time_iso8601\t'
                    'method:$request_method\t'
                    'uri:$request_uri\t'
                    'protocol:$server_protocol\t'
                    'status:$status\t'
                    'size:$body_bytes_sent\t'
                    'ua:$http_user_agent\t'
                    'forwardedfor:$http_x_forwarded_for\t'
                    'forwardedproto:$http_x_forwarded_proto\t'
                    'apptime:$upstream_response_time\t'
                    'reqtime:$request_time';

  access_log /var/log/nginx/access.log ltsv;
  access_log off;
  # access_log on;

  upstream apps {
    server 127.0.0.1:8080 fail_timeout=0;
  }

  server {
    listen 10080;
    root /home/isucon/webapp/public;

    location / {
      try_files $uri @webapp;
    }

    location = /top.html {}
    location = /top_wrong.html {}
    location = /top_banned.html {}
    location = /top_locked.html {}
    location = /top_must.html {}
    location = /images/isucon-bank.png {}
    location = /stylesheets/bootflat.min.css {}
    location = /stylesheets/bootstrap.min.css {}
    location = /stylesheets/isucon-bank.css {}

    location @webapp {
#      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_set_header Host $http_host;
#      proxy_redirect off;
      proxy_pass http://apps; # pass to the upstream apps server
    }

    location = / {
      if ($arg_out = 1) {
         rewrite ^ /top_locked.html last;
      }

      if ($arg_out = 2) {
         rewrite ^ /top_banned.html last;
      }

      if ($arg_out = 3) {
         rewrite ^ /top_wrong.html last;
      }

      if ($arg_out = 4) {
         rewrite ^ /top_must.html last;
      }
      rewrite ^ /top.html;
    }
    
    # location ~ ^/(stylesheets|images)/ {
    #   open_file_cache max=1000 inactive=360s;
    #   # open_file_cache max=100000 inactive=20s # キャッシュファイル最大数とキャッシュ時間
    #   # open_file_cache_valid 30s; # チェック間隔
    #   # open_file_cache_min_uses 2; # 非アクティブファイルの最小ファイル数
    #   # open_file_cache_errors on; # ファイルのエラーもキャッシュする
    # }
  }
}
